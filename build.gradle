plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java-library'
}

group = 'otel.example'
version = '0.0.2-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
springBoot {
	mainClass = 'otel.example.Sample.SampleApplication'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	agent
}

repositories {
	mavenCentral()
}

dependencies {
	agent 'io.opentelemetry.javaagent:opentelemetry-javaagent:1.32.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
task copyAllDependencies(type: Copy) {
	from configurations.compileClasspath
	into(layout.buildDirectory.get().dir("libs"))
}

task copyAgent(type: Copy){
	from configurations.agent {
		rename "opentelemetry-javaagent-.*\\.jar", "opentelemetry-javaagent.jar"
	}
	into(layout.buildDirectory.get().dir("agent"))
}

bootJar {
	dependsOn copyAgent
	archiveFileName =  "sample.jar"
}
build.dependsOn(copyAllDependencies)
tasks.named('test') {
	useJUnitPlatform()
}
